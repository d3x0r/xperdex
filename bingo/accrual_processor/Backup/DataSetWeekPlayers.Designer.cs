//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TopPlayers {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetWeekPlayers")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetWeekPlayers : global::System.Data.DataSet {
        
        private DataTableWeekPlayersDataTable tableDataTableWeekPlayers;
        
        private DataTablePrizesDataTable tableDataTablePrizes;
        
        private DataTableParticipationDataTable tableDataTableParticipation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetWeekPlayers() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetWeekPlayers(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTableWeekPlayers"] != null)) {
                    base.Tables.Add(new DataTableWeekPlayersDataTable(ds.Tables["DataTableWeekPlayers"]));
                }
                if ((ds.Tables["DataTablePrizes"] != null)) {
                    base.Tables.Add(new DataTablePrizesDataTable(ds.Tables["DataTablePrizes"]));
                }
                if ((ds.Tables["DataTableParticipation"] != null)) {
                    base.Tables.Add(new DataTableParticipationDataTable(ds.Tables["DataTableParticipation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTableWeekPlayersDataTable DataTableWeekPlayers {
            get {
                return this.tableDataTableWeekPlayers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTablePrizesDataTable DataTablePrizes {
            get {
                return this.tableDataTablePrizes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTableParticipationDataTable DataTableParticipation {
            get {
                return this.tableDataTableParticipation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetWeekPlayers cln = ((DataSetWeekPlayers)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTableWeekPlayers"] != null)) {
                    base.Tables.Add(new DataTableWeekPlayersDataTable(ds.Tables["DataTableWeekPlayers"]));
                }
                if ((ds.Tables["DataTablePrizes"] != null)) {
                    base.Tables.Add(new DataTablePrizesDataTable(ds.Tables["DataTablePrizes"]));
                }
                if ((ds.Tables["DataTableParticipation"] != null)) {
                    base.Tables.Add(new DataTableParticipationDataTable(ds.Tables["DataTableParticipation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDataTableWeekPlayers = ((DataTableWeekPlayersDataTable)(base.Tables["DataTableWeekPlayers"]));
            if ((initTable == true)) {
                if ((this.tableDataTableWeekPlayers != null)) {
                    this.tableDataTableWeekPlayers.InitVars();
                }
            }
            this.tableDataTablePrizes = ((DataTablePrizesDataTable)(base.Tables["DataTablePrizes"]));
            if ((initTable == true)) {
                if ((this.tableDataTablePrizes != null)) {
                    this.tableDataTablePrizes.InitVars();
                }
            }
            this.tableDataTableParticipation = ((DataTableParticipationDataTable)(base.Tables["DataTableParticipation"]));
            if ((initTable == true)) {
                if ((this.tableDataTableParticipation != null)) {
                    this.tableDataTableParticipation.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetWeekPlayers";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetWeekPlayers.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTableWeekPlayers = new DataTableWeekPlayersDataTable();
            base.Tables.Add(this.tableDataTableWeekPlayers);
            this.tableDataTablePrizes = new DataTablePrizesDataTable();
            base.Tables.Add(this.tableDataTablePrizes);
            this.tableDataTableParticipation = new DataTableParticipationDataTable();
            base.Tables.Add(this.tableDataTableParticipation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTableWeekPlayers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTablePrizes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTableParticipation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetWeekPlayers ds = new DataSetWeekPlayers();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataTableWeekPlayersRowChangeEventHandler(object sender, DataTableWeekPlayersRowChangeEvent e);
        
        public delegate void DataTablePrizesRowChangeEventHandler(object sender, DataTablePrizesRowChangeEvent e);
        
        public delegate void DataTableParticipationRowChangeEventHandler(object sender, DataTableParticipationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTableWeekPlayersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPlayer_Card;
            
            private global::System.Data.DataColumn columnPlayer_Name;
            
            private global::System.Data.DataColumn columnSession;
            
            private global::System.Data.DataColumn columnPoints;
            
            private global::System.Data.DataColumn columnbingoday;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableWeekPlayersDataTable() {
                this.TableName = "DataTableWeekPlayers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTableWeekPlayersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTableWeekPlayersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Player_CardColumn {
                get {
                    return this.columnPlayer_Card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Player_NameColumn {
                get {
                    return this.columnPlayer_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SessionColumn {
                get {
                    return this.columnSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointsColumn {
                get {
                    return this.columnPoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bingodayColumn {
                get {
                    return this.columnbingoday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableWeekPlayersRow this[int index] {
                get {
                    return ((DataTableWeekPlayersRow)(this.Rows[index]));
                }
            }
            
            public event DataTableWeekPlayersRowChangeEventHandler DataTableWeekPlayersRowChanging;
            
            public event DataTableWeekPlayersRowChangeEventHandler DataTableWeekPlayersRowChanged;
            
            public event DataTableWeekPlayersRowChangeEventHandler DataTableWeekPlayersRowDeleting;
            
            public event DataTableWeekPlayersRowChangeEventHandler DataTableWeekPlayersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTableWeekPlayersRow(DataTableWeekPlayersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableWeekPlayersRow AddDataTableWeekPlayersRow(string Player_Card, string Player_Name, long Session, long Points, System.DateTime bingoday) {
                DataTableWeekPlayersRow rowDataTableWeekPlayersRow = ((DataTableWeekPlayersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Player_Card,
                        Player_Name,
                        Session,
                        Points,
                        bingoday};
                rowDataTableWeekPlayersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTableWeekPlayersRow);
                return rowDataTableWeekPlayersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTableWeekPlayersDataTable cln = ((DataTableWeekPlayersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTableWeekPlayersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPlayer_Card = base.Columns["Player_Card"];
                this.columnPlayer_Name = base.Columns["Player_Name"];
                this.columnSession = base.Columns["Session"];
                this.columnPoints = base.Columns["Points"];
                this.columnbingoday = base.Columns["bingoday"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPlayer_Card = new global::System.Data.DataColumn("Player_Card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer_Card);
                this.columnPlayer_Name = new global::System.Data.DataColumn("Player_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer_Name);
                this.columnSession = new global::System.Data.DataColumn("Session", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSession);
                this.columnPoints = new global::System.Data.DataColumn("Points", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoints);
                this.columnbingoday = new global::System.Data.DataColumn("bingoday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbingoday);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableWeekPlayersRow NewDataTableWeekPlayersRow() {
                return ((DataTableWeekPlayersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTableWeekPlayersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTableWeekPlayersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTableWeekPlayersRowChanged != null)) {
                    this.DataTableWeekPlayersRowChanged(this, new DataTableWeekPlayersRowChangeEvent(((DataTableWeekPlayersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTableWeekPlayersRowChanging != null)) {
                    this.DataTableWeekPlayersRowChanging(this, new DataTableWeekPlayersRowChangeEvent(((DataTableWeekPlayersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTableWeekPlayersRowDeleted != null)) {
                    this.DataTableWeekPlayersRowDeleted(this, new DataTableWeekPlayersRowChangeEvent(((DataTableWeekPlayersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTableWeekPlayersRowDeleting != null)) {
                    this.DataTableWeekPlayersRowDeleting(this, new DataTableWeekPlayersRowChangeEvent(((DataTableWeekPlayersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTableWeekPlayersRow(DataTableWeekPlayersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetWeekPlayers ds = new DataSetWeekPlayers();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTableWeekPlayersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTablePrizesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnbingoday;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnPlayer_Card;
            
            private global::System.Data.DataColumn columnPlayer_Name;
            
            private global::System.Data.DataColumn columnscore;
            
            private global::System.Data.DataColumn columnCash_Prize;
            
            private global::System.Data.DataColumn columnPoint_Prize;
            
            private global::System.Data.DataColumn columnpaid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTablePrizesDataTable() {
                this.TableName = "DataTablePrizes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTablePrizesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTablePrizesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bingodayColumn {
                get {
                    return this.columnbingoday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Player_CardColumn {
                get {
                    return this.columnPlayer_Card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Player_NameColumn {
                get {
                    return this.columnPlayer_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scoreColumn {
                get {
                    return this.columnscore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cash_PrizeColumn {
                get {
                    return this.columnCash_Prize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Point_PrizeColumn {
                get {
                    return this.columnPoint_Prize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paidColumn {
                get {
                    return this.columnpaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTablePrizesRow this[int index] {
                get {
                    return ((DataTablePrizesRow)(this.Rows[index]));
                }
            }
            
            public event DataTablePrizesRowChangeEventHandler DataTablePrizesRowChanging;
            
            public event DataTablePrizesRowChangeEventHandler DataTablePrizesRowChanged;
            
            public event DataTablePrizesRowChangeEventHandler DataTablePrizesRowDeleting;
            
            public event DataTablePrizesRowChangeEventHandler DataTablePrizesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTablePrizesRow(DataTablePrizesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTablePrizesRow AddDataTablePrizesRow(System.DateTime bingoday, long position, string Player_Card, string Player_Name, long score, decimal Cash_Prize, long Point_Prize, string paid) {
                DataTablePrizesRow rowDataTablePrizesRow = ((DataTablePrizesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        bingoday,
                        position,
                        Player_Card,
                        Player_Name,
                        score,
                        Cash_Prize,
                        Point_Prize,
                        paid};
                rowDataTablePrizesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTablePrizesRow);
                return rowDataTablePrizesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTablePrizesDataTable cln = ((DataTablePrizesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTablePrizesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnbingoday = base.Columns["bingoday"];
                this.columnposition = base.Columns["position"];
                this.columnPlayer_Card = base.Columns["Player_Card"];
                this.columnPlayer_Name = base.Columns["Player_Name"];
                this.columnscore = base.Columns["score"];
                this.columnCash_Prize = base.Columns["Cash_Prize"];
                this.columnPoint_Prize = base.Columns["Point_Prize"];
                this.columnpaid = base.Columns["paid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnbingoday = new global::System.Data.DataColumn("bingoday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbingoday);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnPlayer_Card = new global::System.Data.DataColumn("Player_Card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer_Card);
                this.columnPlayer_Name = new global::System.Data.DataColumn("Player_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer_Name);
                this.columnscore = new global::System.Data.DataColumn("score", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscore);
                this.columnCash_Prize = new global::System.Data.DataColumn("Cash_Prize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash_Prize);
                this.columnPoint_Prize = new global::System.Data.DataColumn("Point_Prize", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoint_Prize);
                this.columnpaid = new global::System.Data.DataColumn("paid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaid);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTablePrizesRow NewDataTablePrizesRow() {
                return ((DataTablePrizesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTablePrizesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTablePrizesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTablePrizesRowChanged != null)) {
                    this.DataTablePrizesRowChanged(this, new DataTablePrizesRowChangeEvent(((DataTablePrizesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTablePrizesRowChanging != null)) {
                    this.DataTablePrizesRowChanging(this, new DataTablePrizesRowChangeEvent(((DataTablePrizesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTablePrizesRowDeleted != null)) {
                    this.DataTablePrizesRowDeleted(this, new DataTablePrizesRowChangeEvent(((DataTablePrizesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTablePrizesRowDeleting != null)) {
                    this.DataTablePrizesRowDeleting(this, new DataTablePrizesRowChangeEvent(((DataTablePrizesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTablePrizesRow(DataTablePrizesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetWeekPlayers ds = new DataSetWeekPlayers();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTablePrizesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTableParticipationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrank_type;
            
            private global::System.Data.DataColumn columnPlayer_Card;
            
            private global::System.Data.DataColumn columnPlayer_Name;
            
            private global::System.Data.DataColumn columnScore;
            
            private global::System.Data.DataColumn columnTotal_Participations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableParticipationDataTable() {
                this.TableName = "DataTableParticipation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTableParticipationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTableParticipationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rank_typeColumn {
                get {
                    return this.columnrank_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Player_CardColumn {
                get {
                    return this.columnPlayer_Card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Player_NameColumn {
                get {
                    return this.columnPlayer_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScoreColumn {
                get {
                    return this.columnScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_ParticipationsColumn {
                get {
                    return this.columnTotal_Participations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableParticipationRow this[int index] {
                get {
                    return ((DataTableParticipationRow)(this.Rows[index]));
                }
            }
            
            public event DataTableParticipationRowChangeEventHandler DataTableParticipationRowChanging;
            
            public event DataTableParticipationRowChangeEventHandler DataTableParticipationRowChanged;
            
            public event DataTableParticipationRowChangeEventHandler DataTableParticipationRowDeleting;
            
            public event DataTableParticipationRowChangeEventHandler DataTableParticipationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTableParticipationRow(DataTableParticipationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableParticipationRow AddDataTableParticipationRow(string rank_type, string Player_Card, string Player_Name, long Score, long Total_Participations) {
                DataTableParticipationRow rowDataTableParticipationRow = ((DataTableParticipationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        rank_type,
                        Player_Card,
                        Player_Name,
                        Score,
                        Total_Participations};
                rowDataTableParticipationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTableParticipationRow);
                return rowDataTableParticipationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTableParticipationDataTable cln = ((DataTableParticipationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTableParticipationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrank_type = base.Columns["rank_type"];
                this.columnPlayer_Card = base.Columns["Player_Card"];
                this.columnPlayer_Name = base.Columns["Player_Name"];
                this.columnScore = base.Columns["Score"];
                this.columnTotal_Participations = base.Columns["Total_Participations"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrank_type = new global::System.Data.DataColumn("rank_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrank_type);
                this.columnPlayer_Card = new global::System.Data.DataColumn("Player_Card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer_Card);
                this.columnPlayer_Name = new global::System.Data.DataColumn("Player_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer_Name);
                this.columnScore = new global::System.Data.DataColumn("Score", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScore);
                this.columnTotal_Participations = new global::System.Data.DataColumn("Total_Participations", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Participations);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableParticipationRow NewDataTableParticipationRow() {
                return ((DataTableParticipationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTableParticipationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTableParticipationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTableParticipationRowChanged != null)) {
                    this.DataTableParticipationRowChanged(this, new DataTableParticipationRowChangeEvent(((DataTableParticipationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTableParticipationRowChanging != null)) {
                    this.DataTableParticipationRowChanging(this, new DataTableParticipationRowChangeEvent(((DataTableParticipationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTableParticipationRowDeleted != null)) {
                    this.DataTableParticipationRowDeleted(this, new DataTableParticipationRowChangeEvent(((DataTableParticipationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTableParticipationRowDeleting != null)) {
                    this.DataTableParticipationRowDeleting(this, new DataTableParticipationRowChangeEvent(((DataTableParticipationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTableParticipationRow(DataTableParticipationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetWeekPlayers ds = new DataSetWeekPlayers();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTableParticipationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTableWeekPlayersRow : global::System.Data.DataRow {
            
            private DataTableWeekPlayersDataTable tableDataTableWeekPlayers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTableWeekPlayersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTableWeekPlayers = ((DataTableWeekPlayersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Player_Card {
                get {
                    try {
                        return ((string)(this[this.tableDataTableWeekPlayers.Player_CardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Player_Card\' in table \'DataTableWeekPlayers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableWeekPlayers.Player_CardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Player_Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTableWeekPlayers.Player_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Player_Name\' in table \'DataTableWeekPlayers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableWeekPlayers.Player_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Session {
                get {
                    try {
                        return ((long)(this[this.tableDataTableWeekPlayers.SessionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Session\' in table \'DataTableWeekPlayers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableWeekPlayers.SessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Points {
                get {
                    try {
                        return ((long)(this[this.tableDataTableWeekPlayers.PointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Points\' in table \'DataTableWeekPlayers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableWeekPlayers.PointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime bingoday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTableWeekPlayers.bingodayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bingoday\' in table \'DataTableWeekPlayers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableWeekPlayers.bingodayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayer_CardNull() {
                return this.IsNull(this.tableDataTableWeekPlayers.Player_CardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayer_CardNull() {
                this[this.tableDataTableWeekPlayers.Player_CardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayer_NameNull() {
                return this.IsNull(this.tableDataTableWeekPlayers.Player_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayer_NameNull() {
                this[this.tableDataTableWeekPlayers.Player_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSessionNull() {
                return this.IsNull(this.tableDataTableWeekPlayers.SessionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSessionNull() {
                this[this.tableDataTableWeekPlayers.SessionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointsNull() {
                return this.IsNull(this.tableDataTableWeekPlayers.PointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointsNull() {
                this[this.tableDataTableWeekPlayers.PointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbingodayNull() {
                return this.IsNull(this.tableDataTableWeekPlayers.bingodayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbingodayNull() {
                this[this.tableDataTableWeekPlayers.bingodayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTablePrizesRow : global::System.Data.DataRow {
            
            private DataTablePrizesDataTable tableDataTablePrizes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTablePrizesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTablePrizes = ((DataTablePrizesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime bingoday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTablePrizes.bingodayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bingoday\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.bingodayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long position {
                get {
                    try {
                        return ((long)(this[this.tableDataTablePrizes.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Player_Card {
                get {
                    try {
                        return ((string)(this[this.tableDataTablePrizes.Player_CardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Player_Card\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.Player_CardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Player_Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTablePrizes.Player_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Player_Name\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.Player_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long score {
                get {
                    try {
                        return ((long)(this[this.tableDataTablePrizes.scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'score\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cash_Prize {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTablePrizes.Cash_PrizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash_Prize\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.Cash_PrizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Point_Prize {
                get {
                    try {
                        return ((long)(this[this.tableDataTablePrizes.Point_PrizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Point_Prize\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.Point_PrizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paid {
                get {
                    try {
                        return ((string)(this[this.tableDataTablePrizes.paidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paid\' in table \'DataTablePrizes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTablePrizes.paidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbingodayNull() {
                return this.IsNull(this.tableDataTablePrizes.bingodayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbingodayNull() {
                this[this.tableDataTablePrizes.bingodayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspositionNull() {
                return this.IsNull(this.tableDataTablePrizes.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpositionNull() {
                this[this.tableDataTablePrizes.positionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayer_CardNull() {
                return this.IsNull(this.tableDataTablePrizes.Player_CardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayer_CardNull() {
                this[this.tableDataTablePrizes.Player_CardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayer_NameNull() {
                return this.IsNull(this.tableDataTablePrizes.Player_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayer_NameNull() {
                this[this.tableDataTablePrizes.Player_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsscoreNull() {
                return this.IsNull(this.tableDataTablePrizes.scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetscoreNull() {
                this[this.tableDataTablePrizes.scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCash_PrizeNull() {
                return this.IsNull(this.tableDataTablePrizes.Cash_PrizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCash_PrizeNull() {
                this[this.tableDataTablePrizes.Cash_PrizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoint_PrizeNull() {
                return this.IsNull(this.tableDataTablePrizes.Point_PrizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoint_PrizeNull() {
                this[this.tableDataTablePrizes.Point_PrizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaidNull() {
                return this.IsNull(this.tableDataTablePrizes.paidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaidNull() {
                this[this.tableDataTablePrizes.paidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTableParticipationRow : global::System.Data.DataRow {
            
            private DataTableParticipationDataTable tableDataTableParticipation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTableParticipationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTableParticipation = ((DataTableParticipationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rank_type {
                get {
                    try {
                        return ((string)(this[this.tableDataTableParticipation.rank_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rank_type\' in table \'DataTableParticipation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableParticipation.rank_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Player_Card {
                get {
                    try {
                        return ((string)(this[this.tableDataTableParticipation.Player_CardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Player_Card\' in table \'DataTableParticipation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableParticipation.Player_CardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Player_Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTableParticipation.Player_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Player_Name\' in table \'DataTableParticipation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableParticipation.Player_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Score {
                get {
                    try {
                        return ((long)(this[this.tableDataTableParticipation.ScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Score\' in table \'DataTableParticipation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableParticipation.ScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Total_Participations {
                get {
                    try {
                        return ((long)(this[this.tableDataTableParticipation.Total_ParticipationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Participations\' in table \'DataTableParticipation\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTableParticipation.Total_ParticipationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrank_typeNull() {
                return this.IsNull(this.tableDataTableParticipation.rank_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrank_typeNull() {
                this[this.tableDataTableParticipation.rank_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayer_CardNull() {
                return this.IsNull(this.tableDataTableParticipation.Player_CardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayer_CardNull() {
                this[this.tableDataTableParticipation.Player_CardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayer_NameNull() {
                return this.IsNull(this.tableDataTableParticipation.Player_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayer_NameNull() {
                this[this.tableDataTableParticipation.Player_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScoreNull() {
                return this.IsNull(this.tableDataTableParticipation.ScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScoreNull() {
                this[this.tableDataTableParticipation.ScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_ParticipationsNull() {
                return this.IsNull(this.tableDataTableParticipation.Total_ParticipationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_ParticipationsNull() {
                this[this.tableDataTableParticipation.Total_ParticipationsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTableWeekPlayersRowChangeEvent : global::System.EventArgs {
            
            private DataTableWeekPlayersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableWeekPlayersRowChangeEvent(DataTableWeekPlayersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableWeekPlayersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTablePrizesRowChangeEvent : global::System.EventArgs {
            
            private DataTablePrizesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTablePrizesRowChangeEvent(DataTablePrizesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTablePrizesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTableParticipationRowChangeEvent : global::System.EventArgs {
            
            private DataTableParticipationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableParticipationRowChangeEvent(DataTableParticipationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTableParticipationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
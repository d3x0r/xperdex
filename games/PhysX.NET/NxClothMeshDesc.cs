//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2007-2008
// Available under the terms of the
// Eclipse Public License with GPL exception
// See enclosed license file for more information
namespace PhysX.NET
{
	using System;
	using System.Runtime.InteropServices;
	
	
	public class NxClothMeshDesc : NxSimpleTriangleMesh
	{
		
		internal NxClothMeshDesc(IntPtr ptr) : 
				base(ptr)
		{
		}
		
		/// <summary>Offset between vertex masses in bytes. </summary>
		public uint vertexMassStrideBytes
		{
			get
			{
				uint value = get_NxClothMeshDesc_vertexMassStrideBytes_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxClothMeshDesc_vertexMassStrideBytes_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Offset between vertex flags in bytes. </summary>
		public uint vertexFlagStrideBytes
		{
			get
			{
				uint value = get_NxClothMeshDesc_vertexFlagStrideBytes_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxClothMeshDesc_vertexFlagStrideBytes_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Pointer to first vertex mass. </summary>
		public System.IntPtr vertexMasses
		{
			get
			{
				System.IntPtr value = get_NxClothMeshDesc_vertexMasses_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxClothMeshDesc_vertexMasses_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Pointer to first vertex flag. Flags are of type NxClothVertexFlags. </summary>
		public System.IntPtr vertexFlags
		{
			get
			{
				System.IntPtr value = get_NxClothMeshDesc_vertexFlags_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxClothMeshDesc_vertexFlags_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>For welding close vertices. </summary>
		public float weldingDistance
		{
			get
			{
				float value = get_NxClothMeshDesc_weldingDistance_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxClothMeshDesc_weldingDistance_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Constructor sets to default. </summary>
		public NxClothMeshDesc() : 
				base(new_NxClothMeshDesc_INVOKE(false))
		{
			GC.ReRegisterForFinalize(this);
		}
		
		/// <summary>(Re)sets the structure to the default. </summary>
		public void setToDefault()
		{
			NxClothMeshDesc_setToDefault_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		/// <summary>Returns true if the current settings are valid. </summary>
		public bool isValid()
		{
			return NxClothMeshDesc_isValid_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		#region Imports
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxClothMeshDesc_vertexMassStrideBytes")]
        private extern static void set_NxClothMeshDesc_vertexMassStrideBytes_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxClothMeshDesc_vertexMassStrideBytes")]
        private extern static System.UInt32 get_NxClothMeshDesc_vertexMassStrideBytes_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxClothMeshDesc_vertexFlagStrideBytes")]
        private extern static void set_NxClothMeshDesc_vertexFlagStrideBytes_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxClothMeshDesc_vertexFlagStrideBytes")]
        private extern static System.UInt32 get_NxClothMeshDesc_vertexFlagStrideBytes_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxClothMeshDesc_vertexMasses")]
        private extern static void set_NxClothMeshDesc_vertexMasses_INVOKE (HandleRef classPointer, System.IntPtr newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxClothMeshDesc_vertexMasses")]
        private extern static System.IntPtr get_NxClothMeshDesc_vertexMasses_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxClothMeshDesc_vertexFlags")]
        private extern static void set_NxClothMeshDesc_vertexFlags_INVOKE (HandleRef classPointer, System.IntPtr newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxClothMeshDesc_vertexFlags")]
        private extern static System.IntPtr get_NxClothMeshDesc_vertexFlags_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxClothMeshDesc_weldingDistance")]
        private extern static void set_NxClothMeshDesc_weldingDistance_INVOKE (HandleRef classPointer, System.Single newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxClothMeshDesc_weldingDistance")]
        private extern static System.Single get_NxClothMeshDesc_weldingDistance_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="new_NxClothMeshDesc")]
        private extern static IntPtr new_NxClothMeshDesc_INVOKE (System.Boolean do_override);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxClothMeshDesc_setToDefault")]
        private extern static void NxClothMeshDesc_setToDefault_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxClothMeshDesc_isValid")]
        private extern static System.Boolean NxClothMeshDesc_isValid_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		#endregion
		
		private static System.Collections.Generic.Dictionary<System.IntPtr, System.WeakReference> database = new System.Collections.Generic.Dictionary<System.IntPtr, System.WeakReference>();
		
		protected override void SetPointer(IntPtr ptr)
		{
			base.SetPointer(ptr);
			database[ptr] = new WeakReference(this);
		}
		
		public override void Dispose()
		{
			database.Remove(ClassPointer.Handle);
			base.Dispose();
		}
		
		public static NxClothMeshDesc GetClass(IntPtr ptr)
		{
			if ((ptr == IntPtr.Zero))
			{
				return null;
			}
			System.WeakReference obj;
			if (database.TryGetValue(ptr, out obj))
			{
				if (obj.IsAlive)
				{
					return ((NxClothMeshDesc)(obj.Target));
				}
			}
			return new NxClothMeshDesc(ptr);
		}
		
		protected override System.Collections.Generic.List<System.IntPtr> CreateFunctionPointers()
		{
			System.Collections.Generic.List<System.IntPtr> list = base.CreateFunctionPointers();
			return list;
		}
	}
}

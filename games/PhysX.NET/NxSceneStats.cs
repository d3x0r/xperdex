//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2007-2008
// Available under the terms of the
// Eclipse Public License with GPL exception
// See enclosed license file for more information
namespace PhysX.NET
{
	using System;
	using System.Runtime.InteropServices;
	
	
	public class NxSceneStats : DoxyBindObject
	{
		
		internal NxSceneStats(IntPtr ptr) : 
				base(ptr)
		{
		}
		
		/// <summary>Number of contacts present in the scene for the current simulation step. Not supported in 2.6. </summary>
		public uint numContacts
		{
			get
			{
				uint value = get_NxSceneStats_numContacts_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numContacts_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Maximum number of contacts present in the scene since the scene was created. Not supported in 2.6. </summary>
		public uint maxContacts
		{
			get
			{
				uint value = get_NxSceneStats_maxContacts_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxContacts_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of shape pairs present in the scene for the current simulation step. </summary>
		public uint numPairs
		{
			get
			{
				uint value = get_NxSceneStats_numPairs_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numPairs_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Maximum number of shape pairs present in the scene since the scene was created. </summary>
		public uint maxPairs
		{
			get
			{
				uint value = get_NxSceneStats_maxPairs_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxPairs_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of dynamic actors which are not part of a sleeping group(island). </summary>
		public uint numDynamicActorsInAwakeGroups
		{
			get
			{
				uint value = get_NxSceneStats_numDynamicActorsInAwakeGroups_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numDynamicActorsInAwakeGroups_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Maximum number of actors which have been present in a non sleeping island since the scene was created. </summary>
		public uint maxDynamicActorsInAwakeGroups
		{
			get
			{
				uint value = get_NxSceneStats_maxDynamicActorsInAwakeGroups_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxDynamicActorsInAwakeGroups_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>The number of constraints(joints+contact) present in the current simulation step. Not supported in 2.6. </summary>
		public uint numAxisConstraints
		{
			get
			{
				uint value = get_NxSceneStats_numAxisConstraints_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numAxisConstraints_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>The maximum number of constraints(joints+contacts) present in the scene since creation. Not supported in 2.6. </summary>
		public uint maxAxisConstraints
		{
			get
			{
				uint value = get_NxSceneStats_maxAxisConstraints_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxAxisConstraints_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of solver bodies present in the current step(i.e. the number of bodies subject to constraints). Not supported in 2.6. </summary>
		public uint numSolverBodies
		{
			get
			{
				uint value = get_NxSceneStats_numSolverBodies_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numSolverBodies_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Max number of solver bodies present in the scene since creation. Not supported in 2.6. </summary>
		public uint maxSolverBodies
		{
			get
			{
				uint value = get_NxSceneStats_maxSolverBodies_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxSolverBodies_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of actors(static+dynamic) present in the scene for the current simulation step. </summary>
		public uint numActors
		{
			get
			{
				uint value = get_NxSceneStats_numActors_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numActors_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Max number of actors(static+dynamic) present in the scene since the scene was created. </summary>
		public uint maxActors
		{
			get
			{
				uint value = get_NxSceneStats_maxActors_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxActors_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of dynamic actors present in the scene for the current simulation step. </summary>
		public uint numDynamicActors
		{
			get
			{
				uint value = get_NxSceneStats_numDynamicActors_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numDynamicActors_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Max number of dynamic actors present in the scene since it was created. </summary>
		public uint maxDynamicActors
		{
			get
			{
				uint value = get_NxSceneStats_maxDynamicActors_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxDynamicActors_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of static shapes present in the scene. </summary>
		public uint numStaticShapes
		{
			get
			{
				uint value = get_NxSceneStats_numStaticShapes_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numStaticShapes_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Max number of static shapes present in the scene since it was created. </summary>
		public uint maxStaticShapes
		{
			get
			{
				uint value = get_NxSceneStats_maxStaticShapes_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxStaticShapes_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of dynamic shapes present in the scene for the current simulation step. </summary>
		public uint numDynamicShapes
		{
			get
			{
				uint value = get_NxSceneStats_numDynamicShapes_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numDynamicShapes_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Max number of dynamic actors present in the scene, since it was created. </summary>
		public uint maxDynamicShapes
		{
			get
			{
				uint value = get_NxSceneStats_maxDynamicShapes_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxDynamicShapes_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Number of joints in the scene. Note that this number also includes all "dead joints" in the scene (see NxScene.releaseActor). </summary>
		public uint numJoints
		{
			get
			{
				uint value = get_NxSceneStats_numJoints_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_numJoints_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary>Max number of joints in the scene since it was created. </summary>
		public uint maxJoints
		{
			get
			{
				uint value = get_NxSceneStats_maxJoints_INVOKE(ClassPointer);
				return value;
			}
			set
			{
				set_NxSceneStats_maxJoints_INVOKE(ClassPointer, value);
			}
		}
		
		/// <summary></summary>
		public NxSceneStats() : 
				base(new_NxSceneStats_INVOKE(false))
		{
			GC.ReRegisterForFinalize(this);
		}
		
		/// <summary>Zeros all members. </summary>
		public void reset()
		{
			NxSceneStats_reset_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		#region Imports
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numContacts")]
        private extern static void set_NxSceneStats_numContacts_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numContacts")]
        private extern static System.UInt32 get_NxSceneStats_numContacts_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxContacts")]
        private extern static void set_NxSceneStats_maxContacts_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxContacts")]
        private extern static System.UInt32 get_NxSceneStats_maxContacts_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numPairs")]
        private extern static void set_NxSceneStats_numPairs_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numPairs")]
        private extern static System.UInt32 get_NxSceneStats_numPairs_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxPairs")]
        private extern static void set_NxSceneStats_maxPairs_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxPairs")]
        private extern static System.UInt32 get_NxSceneStats_maxPairs_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numDynamicActorsInAwakeGroups")]
        private extern static void set_NxSceneStats_numDynamicActorsInAwakeGroups_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numDynamicActorsInAwakeGroups")]
        private extern static System.UInt32 get_NxSceneStats_numDynamicActorsInAwakeGroups_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxDynamicActorsInAwakeGroups")]
        private extern static void set_NxSceneStats_maxDynamicActorsInAwakeGroups_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxDynamicActorsInAwakeGroups")]
        private extern static System.UInt32 get_NxSceneStats_maxDynamicActorsInAwakeGroups_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numAxisConstraints")]
        private extern static void set_NxSceneStats_numAxisConstraints_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numAxisConstraints")]
        private extern static System.UInt32 get_NxSceneStats_numAxisConstraints_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxAxisConstraints")]
        private extern static void set_NxSceneStats_maxAxisConstraints_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxAxisConstraints")]
        private extern static System.UInt32 get_NxSceneStats_maxAxisConstraints_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numSolverBodies")]
        private extern static void set_NxSceneStats_numSolverBodies_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numSolverBodies")]
        private extern static System.UInt32 get_NxSceneStats_numSolverBodies_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxSolverBodies")]
        private extern static void set_NxSceneStats_maxSolverBodies_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxSolverBodies")]
        private extern static System.UInt32 get_NxSceneStats_maxSolverBodies_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numActors")]
        private extern static void set_NxSceneStats_numActors_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numActors")]
        private extern static System.UInt32 get_NxSceneStats_numActors_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxActors")]
        private extern static void set_NxSceneStats_maxActors_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxActors")]
        private extern static System.UInt32 get_NxSceneStats_maxActors_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numDynamicActors")]
        private extern static void set_NxSceneStats_numDynamicActors_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numDynamicActors")]
        private extern static System.UInt32 get_NxSceneStats_numDynamicActors_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxDynamicActors")]
        private extern static void set_NxSceneStats_maxDynamicActors_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxDynamicActors")]
        private extern static System.UInt32 get_NxSceneStats_maxDynamicActors_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numStaticShapes")]
        private extern static void set_NxSceneStats_numStaticShapes_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numStaticShapes")]
        private extern static System.UInt32 get_NxSceneStats_numStaticShapes_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxStaticShapes")]
        private extern static void set_NxSceneStats_maxStaticShapes_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxStaticShapes")]
        private extern static System.UInt32 get_NxSceneStats_maxStaticShapes_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numDynamicShapes")]
        private extern static void set_NxSceneStats_numDynamicShapes_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numDynamicShapes")]
        private extern static System.UInt32 get_NxSceneStats_numDynamicShapes_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxDynamicShapes")]
        private extern static void set_NxSceneStats_maxDynamicShapes_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxDynamicShapes")]
        private extern static System.UInt32 get_NxSceneStats_maxDynamicShapes_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_numJoints")]
        private extern static void set_NxSceneStats_numJoints_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_numJoints")]
        private extern static System.UInt32 get_NxSceneStats_numJoints_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="set_NxSceneStats_maxJoints")]
        private extern static void set_NxSceneStats_maxJoints_INVOKE (HandleRef classPointer, System.UInt32 newvalue);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="get_NxSceneStats_maxJoints")]
        private extern static System.UInt32 get_NxSceneStats_maxJoints_INVOKE (HandleRef classPointer);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="new_NxSceneStats")]
        private extern static IntPtr new_NxSceneStats_INVOKE (System.Boolean do_override);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxSceneStats_reset")]
        private extern static void NxSceneStats_reset_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		#endregion
		
		private static System.Collections.Generic.Dictionary<System.IntPtr, System.WeakReference> database = new System.Collections.Generic.Dictionary<System.IntPtr, System.WeakReference>();
		
		protected override void SetPointer(IntPtr ptr)
		{
			base.SetPointer(ptr);
			database[ptr] = new WeakReference(this);
		}
		
		public override void Dispose()
		{
			database.Remove(ClassPointer.Handle);
			base.Dispose();
		}
		
		public static NxSceneStats GetClass(IntPtr ptr)
		{
			if ((ptr == IntPtr.Zero))
			{
				return null;
			}
			System.WeakReference obj;
			if (database.TryGetValue(ptr, out obj))
			{
				if (obj.IsAlive)
				{
					return ((NxSceneStats)(obj.Target));
				}
			}
			return new NxSceneStats(ptr);
		}
		
		protected override System.Collections.Generic.List<System.IntPtr> CreateFunctionPointers()
		{
			System.Collections.Generic.List<System.IntPtr> list = base.CreateFunctionPointers();
			return list;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2007-2008
// Available under the terms of the
// Eclipse Public License with GPL exception
// See enclosed license file for more information
namespace PhysX.NET
{
	using System;
	using System.Runtime.InteropServices;
	
	
	public class NxHeightField : DoxyBindObject
	{
		
		internal NxHeightField(IntPtr ptr) : 
				base(ptr)
		{
		}
		
		/// <summary>Saves the HeightField descriptor. </summary>
		/// <param name="desc">The descriptor used to retrieve the state of the object.</param>
		public virtual bool saveToDesc(NxHeightFieldDesc desc)
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_saveToDesc_INVOKE(ClassPointer, doSetFunctionPointers, (desc!=null ? desc.ClassPointer : NullRef));
		}
		
		private bool saveToDesc_virtual(IntPtr desc)
		{
			return saveToDesc(NxHeightFieldDesc.GetClass(desc));
		}
		
		delegate bool saveToDesc_0_delegate(IntPtr desc);
		
		
		
		
		
		
		private saveToDesc_0_delegate saveToDesc_0_delegatefield;
		
		/// <summary>Load the height field from a description. </summary>
		/// <param name="desc">The descriptor to load the object from.</param>
		public virtual bool loadFromDesc(NxHeightFieldDesc desc)
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_loadFromDesc_INVOKE(ClassPointer, doSetFunctionPointers, (desc!=null ? desc.ClassPointer : NullRef));
		}
		
		private bool loadFromDesc_virtual(IntPtr desc)
		{
			return loadFromDesc(NxHeightFieldDesc.GetClass(desc));
		}
		
		delegate bool loadFromDesc_1_delegate(IntPtr desc);
		
		
		
		
		
		
		private loadFromDesc_1_delegate loadFromDesc_1_delegatefield;
		
		/// <summary>Writes out the sample data array. </summary>
		/// <param name="destBuffer">The destination buffer for the sample data. </param>
		/// <param name="destBufferSize">The size of the destination buffer. </param>
		public virtual uint saveCells(System.IntPtr destBuffer, uint destBufferSize)
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_saveCells_INVOKE(ClassPointer, doSetFunctionPointers, destBuffer, destBufferSize);
		}
		
		private uint saveCells_virtual(System.IntPtr destBuffer, uint destBufferSize)
		{
			return saveCells(destBuffer, destBufferSize);
		}
		
		delegate uint saveCells_2_delegate(System.IntPtr destBuffer, uint destBufferSize);
		
		
		
		
		
		
		private saveCells_2_delegate saveCells_2_delegatefield;
		
		/// <summary>Retrieves the number of sample rows in the samples array. </summary>
		public virtual uint getNbRows()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getNbRows_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private uint getNbRows_virtual()
		{
			return getNbRows();
		}
		
		delegate uint getNbRows_3_delegate();
		
		
		
		
		
		
		private getNbRows_3_delegate getNbRows_3_delegatefield;
		
		/// <summary>Retrieves the number of sample columns in the samples array. </summary>
		public virtual uint getNbColumns()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getNbColumns_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private uint getNbColumns_virtual()
		{
			return getNbColumns();
		}
		
		delegate uint getNbColumns_4_delegate();
		
		
		
		
		
		
		private getNbColumns_4_delegate getNbColumns_4_delegatefield;
		
		/// <summary>Retrieves the format of the sample data. </summary>
		public virtual NxHeightFieldFormat getFormat()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getFormat_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private NxHeightFieldFormat getFormat_virtual()
		{
			return getFormat();
		}
		
		delegate NxHeightFieldFormat getFormat_5_delegate();
		
		
		
		
		
		
		private getFormat_5_delegate getFormat_5_delegatefield;
		
		/// <summary>Retrieves the offset in bytes between consecutive samples in the array. </summary>
		public virtual uint getSampleStride()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getSampleStride_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private uint getSampleStride_virtual()
		{
			return getSampleStride();
		}
		
		delegate uint getSampleStride_6_delegate();
		
		
		
		
		
		
		private getSampleStride_6_delegate getSampleStride_6_delegatefield;
		
		/// <summary>Deprecated: Retrieves the extent of the height volume in the vertical direction. </summary>
		public virtual float getVerticalExtent()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getVerticalExtent_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private float getVerticalExtent_virtual()
		{
			return getVerticalExtent();
		}
		
		delegate float getVerticalExtent_7_delegate();
		
		
		
		
		
		
		private getVerticalExtent_7_delegate getVerticalExtent_7_delegatefield;
		
		/// <summary>Retrieves the thickness of the height volume in the vertical direction. </summary>
		public virtual float getThickness()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getThickness_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private float getThickness_virtual()
		{
			return getThickness();
		}
		
		delegate float getThickness_8_delegate();
		
		
		
		
		
		
		private getThickness_8_delegate getThickness_8_delegatefield;
		
		/// <summary>Retrieves the convex edge threshold. </summary>
		public virtual float getConvexEdgeThreshold()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getConvexEdgeThreshold_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private float getConvexEdgeThreshold_virtual()
		{
			return getConvexEdgeThreshold();
		}
		
		delegate float getConvexEdgeThreshold_9_delegate();
		
		
		
		
		
		
		private getConvexEdgeThreshold_9_delegate getConvexEdgeThreshold_9_delegatefield;
		
		/// <summary>Retrieves the flags bits, combined from values of the enum NxHeightFieldFlags. </summary>
		public virtual uint getFlags()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getFlags_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private uint getFlags_virtual()
		{
			return getFlags();
		}
		
		delegate uint getFlags_10_delegate();
		
		
		
		
		
		
		private getFlags_10_delegate getFlags_10_delegatefield;
		
		/// <summary>Retrieves the height at the given coordinates in grid space. </summary>
		public virtual float getHeight(float x, float z)
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getHeight_INVOKE(ClassPointer, doSetFunctionPointers, x, z);
		}
		
		private float getHeight_virtual(float x, float z)
		{
			return getHeight(x, z);
		}
		
		delegate float getHeight_11_delegate(float x, float z);
		
		
		
		
		
		
		private getHeight_11_delegate getHeight_11_delegatefield;
		
		/// <summary>Returns a read only pointer directly to the samples array. The data format is identical to that in NxHeightFieldDesc.samples. </summary>
		public virtual System.IntPtr getCells()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getCells_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private System.IntPtr getCells_virtual()
		{
			return getCells();
		}
		
		delegate System.IntPtr getCells_12_delegate();
		
		
		
		
		
		
		private getCells_12_delegate getCells_12_delegatefield;
		
		/// <summary>Returns the reference count for shared meshes. </summary>
		public virtual uint getReferenceCount()
		{
			if (doSetFunctionPointers)
			{
				throw new System.NotSupportedException("Cannot call abstract base member");
			}
			return NxHeightField_getReferenceCount_INVOKE(ClassPointer, doSetFunctionPointers);
		}
		
		private uint getReferenceCount_virtual()
		{
			return getReferenceCount();
		}
		
		delegate uint getReferenceCount_13_delegate();
		
		
		
		
		
		
		private getReferenceCount_13_delegate getReferenceCount_13_delegatefield;
		
		#region Imports
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_saveToDesc")]
        private extern static System.Boolean NxHeightField_saveToDesc_INVOKE (HandleRef classPointer, System.Boolean call_explicit, HandleRef desc);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_loadFromDesc")]
        private extern static System.Boolean NxHeightField_loadFromDesc_INVOKE (HandleRef classPointer, System.Boolean call_explicit, HandleRef desc);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_saveCells")]
        private extern static System.UInt32 NxHeightField_saveCells_INVOKE (HandleRef classPointer, System.Boolean call_explicit, System.IntPtr destBuffer, System.UInt32 destBufferSize);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getNbRows")]
        private extern static System.UInt32 NxHeightField_getNbRows_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getNbColumns")]
        private extern static System.UInt32 NxHeightField_getNbColumns_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getFormat")]
        private extern static NxHeightFieldFormat NxHeightField_getFormat_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getSampleStride")]
        private extern static System.UInt32 NxHeightField_getSampleStride_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getVerticalExtent")]
        private extern static System.Single NxHeightField_getVerticalExtent_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getThickness")]
        private extern static System.Single NxHeightField_getThickness_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getConvexEdgeThreshold")]
        private extern static System.Single NxHeightField_getConvexEdgeThreshold_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getFlags")]
        private extern static System.UInt32 NxHeightField_getFlags_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getHeight")]
        private extern static System.Single NxHeightField_getHeight_INVOKE (HandleRef classPointer, System.Boolean call_explicit, System.Single x, System.Single z);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getCells")]
        private extern static System.IntPtr NxHeightField_getCells_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="NxHeightField_getReferenceCount")]
        private extern static System.UInt32 NxHeightField_getReferenceCount_INVOKE (HandleRef classPointer, System.Boolean call_explicit);

		#endregion
		
        [System.Security.SuppressUnmanagedCodeSecurity()]
        [DllImport(NATIVE_LIBRARY, EntryPoint="new_NxHeightField")]
        private extern static IntPtr new_NxHeightField_INVOKE (bool do_override);

		
		protected NxHeightField() : 
				base(IntPtr.Zero)
		{
			GC.ReRegisterForFinalize(this);
			if ((GetType() != typeof(NxHeightField)))
			{
				doSetFunctionPointers = true;
				SetPointer(new_NxHeightField_INVOKE(doSetFunctionPointers));
				System.IntPtr[] pointers = CreateFunctionPointers().ToArray();
				set_pointers_INVOKE(ClassPointer, pointers, pointers.Length);
			}
			else
			{
				SetPointer(new_NxHeightField_INVOKE(doSetFunctionPointers));
			}
		}
		
		private static System.Collections.Generic.Dictionary<System.IntPtr, System.WeakReference> database = new System.Collections.Generic.Dictionary<System.IntPtr, System.WeakReference>();
		
		protected override void SetPointer(IntPtr ptr)
		{
			base.SetPointer(ptr);
			database[ptr] = new WeakReference(this);
		}
		
		public override void Dispose()
		{
			database.Remove(ClassPointer.Handle);
			base.Dispose();
		}
		
		public static NxHeightField GetClass(IntPtr ptr)
		{
			if ((ptr == IntPtr.Zero))
			{
				return null;
			}
			System.WeakReference obj;
			if (database.TryGetValue(ptr, out obj))
			{
				if (obj.IsAlive)
				{
					return ((NxHeightField)(obj.Target));
				}
			}
			return new NxHeightField(ptr);
		}
		
		protected override System.Collections.Generic.List<System.IntPtr> CreateFunctionPointers()
		{
			System.Collections.Generic.List<System.IntPtr> list = base.CreateFunctionPointers();
			saveToDesc_0_delegatefield = new saveToDesc_0_delegate(this.saveToDesc_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(saveToDesc_0_delegatefield));
			loadFromDesc_1_delegatefield = new loadFromDesc_1_delegate(this.loadFromDesc_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(loadFromDesc_1_delegatefield));
			saveCells_2_delegatefield = new saveCells_2_delegate(this.saveCells_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(saveCells_2_delegatefield));
			getNbRows_3_delegatefield = new getNbRows_3_delegate(this.getNbRows_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getNbRows_3_delegatefield));
			getNbColumns_4_delegatefield = new getNbColumns_4_delegate(this.getNbColumns_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getNbColumns_4_delegatefield));
			getFormat_5_delegatefield = new getFormat_5_delegate(this.getFormat_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getFormat_5_delegatefield));
			getSampleStride_6_delegatefield = new getSampleStride_6_delegate(this.getSampleStride_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getSampleStride_6_delegatefield));
			getVerticalExtent_7_delegatefield = new getVerticalExtent_7_delegate(this.getVerticalExtent_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getVerticalExtent_7_delegatefield));
			getThickness_8_delegatefield = new getThickness_8_delegate(this.getThickness_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getThickness_8_delegatefield));
			getConvexEdgeThreshold_9_delegatefield = new getConvexEdgeThreshold_9_delegate(this.getConvexEdgeThreshold_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getConvexEdgeThreshold_9_delegatefield));
			getFlags_10_delegatefield = new getFlags_10_delegate(this.getFlags_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getFlags_10_delegatefield));
			getHeight_11_delegatefield = new getHeight_11_delegate(this.getHeight_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getHeight_11_delegatefield));
			getCells_12_delegatefield = new getCells_12_delegate(this.getCells_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getCells_12_delegatefield));
			getReferenceCount_13_delegatefield = new getReferenceCount_13_delegate(this.getReferenceCount_virtual);
			list.Add(Marshal.GetFunctionPointerForDelegate(getReferenceCount_13_delegatefield));
			return list;
		}
	}
}
